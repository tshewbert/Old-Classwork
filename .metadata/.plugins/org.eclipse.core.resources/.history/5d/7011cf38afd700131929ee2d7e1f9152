//********************************************************************
//  MagazineList.java       Author: Lewis/Loftus
//
//  Represents a collection of magazines.
//*******************************************************************

public class MagazineList
{
   private MagazineNode list;

   //----------------------------------------------------------------
   //  Sets up an initially empty list of magazines.
   //----------------------------------------------------------------
   MagazineList()
   {
      list = null;
   }

   //----------------------------------------------------------------
   //  Creates a new MagazineNode object and adds it to the end of
   //  the linked list.
   //----------------------------------------------------------------
   public void add (Magazine mag)
   {

      MagazineNode node = new MagazineNode (mag);
      MagazineNode current;

      if (list == null)
         list = node;
      else
      {
         current = list;
         while (current.next != null)
            current = current.next;
         current.next = node;
      }
   }

   //----------------------------------------------------------------
   //  Returns this list of magazines as a string.
   //----------------------------------------------------------------
   public String toString ()
   {
      String result = "";

      MagazineNode current = list;

      while (current != null)
      {
         result += current.magazine + "\n";
         current = current.next;
      }

      return result;
   }

   //*****************************************************************
   //  An inner class that represents a node in the magazine list.
   //  The public variables are accessed by the MagazineList class.
   //*****************************************************************
   private class MagazineNode
   {
      public Magazine magazine;
      public MagazineNode next;

      //--------------------------------------------------------------
      //  Sets up the node
      //--------------------------------------------------------------
      public MagazineNode (Magazine mag)
      {
         magazine = mag;
         next = null;
      }
   }

public void deleteAll() {
	{
	    if(list == null) {

	    }

	    else {
	        list = null;
	    }
	}
	
}

public void delete(Magazine magazine) {
	{
	    MagazineNode current = this.list;
	    MagazineNode before;

	    //if is the first element
	    if (current.equals(mag)) {
	        this.list = current.next;
	        return;     //ending the method
	    }


	    before = current;

	    //while there are elements in the list
	    while ((current = current.next) != null) {

	        //if is the current element
	        if (current.equals(mag)) {
	            before.next = current.next;
	            return;     //ending the method 
	        }

	        before = current;
	    }

	}
	
}

public void insert(Magazine magazine) {
	  MagazineNode node = new MagazineNode (magazine);

	  // make the new first node point to the current root
	  node.next=list;

	  // update the root to the new first node
	  list=node;
	}
}
